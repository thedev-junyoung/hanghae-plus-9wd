version: '3'
services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=application
      - MYSQL_PASSWORD=application
      - MYSQL_DATABASE=hhplus
    volumes:
      - ./data/mysql/:/var/lib/mysql
      - ./init/01-schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./init/02-data.sql:/docker-entrypoint-initdb.d/02-data.sql
    networks:
      - redis-net

  redis-master:
    image: redis:7
    container_name: redis-master
    ports:
      - "6379:6379"
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
      - ./data/redis:/data
    networks:
      - redis-net


  redis-slave:
    image: redis:7
    container_name: redis-slave
    ports:
      - "6380:6379"
    command: redis-server --slaveof redis-master 6379
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - redis-net

  sentinel1:
    image: redis:7
    container_name: sentinel1
    ports:
      - "26379:26379"
    command: redis-sentinel /etc/redis/sentinel1.conf
    volumes:
      - ./redis/sentinel1.conf:/etc/redis/sentinel1.conf
    networks:
      - redis-net

  sentinel2:
    image: redis:7
    container_name: sentinel2
    ports:
      - "26380:26380"
    command: redis-sentinel /etc/redis/sentinel2.conf
    volumes:
      - ./redis/sentinel2.conf:/etc/redis/sentinel2.conf
    networks:
      - redis-net

  sentinel3:
    image: redis:7
    container_name: sentinel3
    ports:
      - "26381:26381"
    command: redis-sentinel /etc/redis/sentinel3.conf
    volumes:
      - ./redis/sentinel3.conf:/etc/redis/sentinel3.conf
    networks:
      - redis-net


  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - redis-net

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - redis-net

  k6:
    image: grafana/k6
    container_name: k6
    volumes:
      - ./monitoring/k6/scripts:/scripts
    entrypoint: [ "sleep", "infinity" ]

    environment:
      - K6_PROMETHEUS_RW_SERVER_URL=http://prometheus:9090/api/v1/write
    networks:
      - redis-net

  kafka:
    image: bitnami/kafka:3.6
    container_name: kafka
    ports:
      - "9092:9093"   # 내부 통신용
      - "9094:9094"   # 외부 접근용 (로컬 클라이언트가 localhost:9094로 접근)
    environment:
      - KAFKA_KRAFT_CLUSTER_ID=0d8pZ7giQIeD3sWZIJ1-pQ
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9091
      - KAFKA_CFG_LISTENERS=PLAINTEXT_INTERNAL://0.0.0.0:9093,PLAINTEXT_EXTERNAL://0.0.0.0:9094,CONTROLLER://0.0.0.0:9091
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT_INTERNAL://kafka:9093,PLAINTEXT_EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT_INTERNAL:PLAINTEXT,PLAINTEXT_EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT_INTERNAL
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    volumes:
      - ./data/kafka:/bitnami/kafka
      - ./kafka/create-topics.sh:/create-topics.sh
    networks:
      - redis-net
    command: [ "/bin/bash", "-c", "/opt/bitnami/scripts/kafka/run.sh & sleep 10 && /create-topics.sh && wait" ]


  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "18080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=kraft-cluster
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9093
    depends_on:
      - kafka
    networks:
      - redis-net




networks:
  redis-net:
    driver: bridge
